
%% ================================================================================================================================
%????6
%??????????????????????????????????
%????
%x????????????????(x,y),????inlier_n x 2 
%center????????????????(x,y) 1x2
%tbins: ???? = min( 180 , pi*(1.5*(a+b)-sqrt(a*b)) ) 
%????
%idx??????x??????????inlier_n x 1??logical????????????????????????????????????????????????????????1????????0
function idx = takeInliers(x, center, tbins)
   [theta, ~] = cart2pol(x(:, 1) - center(1), x(:, 2) - center(2));%????[-pi,pi]???????????????? theta = atan2(x(:, 2) - center(2) , x(:, 1) - center(1)); 
    tmin = -pi; tmax = pi;
    tt = round((theta - tmin) / (tmax - tmin) * tbins + 0.5);%????????????[1 tbins]
    tt(tt < 1) = 1; tt(tt > tbins) = tbins;
    h = histc(tt, 1 : tbins);%h????????[1 tbins]??????????
    mark = zeros(tbins, 1);
    compSize = zeros(tbins, 1);
    nComps = 0;
    queue = zeros(tbins, 1);
    du = [-1, 1];
    for i = 1 : tbins
        if (h(i) > 0 && mark(i) == 0)%??????????i????????????????0????mark(i)??0 if this bin has pixels and has not been marked
            nComps = nComps + 1;% number of component + 1
            mark(i) = nComps;%??????nComps?????????? % mark this bin to a new component
            front = 1; rear = 1;% queue idx
            queue(front) = i;%????????????????????????????????
            while (front <= rear)
                u = queue(front);% LIFO queue
                front = front + 1;
                for j = 1 : 2 
                    v = u + du(j); % neighboring bin
                    if (v == 0) % round back to the tail of the bin
                        v = tbins;
                    end
                    if (v > tbins)% round back to the head of the bin
                        v = 1;
                    end
                    if (mark(v) == 0 && h(v) > 0)% if has not been marked and has at least 1 pixels
                        rear = rear + 1;% fill in the queue
                        queue(rear) = v;
                        mark(v) = nComps;%??????nComps?????????? % mark this bin to the current component
                    end
                end
            end
            compSize(nComps) = sum(ismember(tt, find(mark == nComps)));%????????????????nComps?????????? 
        end
    end
    compSize(nComps + 1 : end) = [];
    maxCompSize = max(compSize);
    validComps = find(compSize >= maxCompSize * 0.1 & compSize > 10);%??????????????????????0.1???????????????????? % valie componeent should have a certain length
    validBins = find(ismember(mark, validComps));%??????????
    idx = ismember(tt, validBins);%?????????? % extract the original index of those inliters in the valid bins.
end